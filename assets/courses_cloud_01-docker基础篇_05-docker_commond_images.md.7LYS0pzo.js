import{_ as r}from"./chunks/ArticleMetadata.EniEqKqn.js";import{_ as c,D as d,o as t,c as n,I as p,w as h,k as i,a as m,R as k,b as g,e as u}from"./chunks/framework.FVQzxbLi.js";import"./chunks/md5.RtphNWHi.js";const D=JSON.parse('{"title":"基础命令","description":"","frontmatter":{"title":"基础命令","author":"吴建华","date":"2021/01/16 17:58","categories":["docker基础篇"],"tags":["docker","linux"]},"headers":[],"relativePath":"courses/cloud/01-docker基础篇/05-docker_commond_images.md","filePath":"courses/cloud/01-docker基础篇/05-docker_commond_images.md","lastUpdated":1702561947000}'),b={name:"courses/cloud/01-docker基础篇/05-docker_commond_images.md"},_=i("h1",{id:"基础命令",tabindex:"-1"},[m("基础命令 "),i("a",{class:"header-anchor",href:"#基础命令","aria-label":'Permalink to "基础命令"'},"​")],-1),v=k(`<h2 id="帮助启动类命令" tabindex="-1">帮助启动类命令 <a class="header-anchor" href="#帮助启动类命令" aria-label="Permalink to &quot;帮助启动类命令&quot;">​</a></h2><p>启动docker： systemctl start docker 停止docker： systemctl stop docker 重启docker： systemctl restart docker 查看docker状态： systemctl status docker 开机启动： systemctl enable docker 查看docker概要信息： docker info 查看docker总体帮助文档： docker --help 查看docker命令帮助文档： docker 具体命令 --help</p><h2 id="镜像命令" tabindex="-1">镜像命令 <a class="header-anchor" href="#镜像命令" aria-label="Permalink to &quot;镜像命令&quot;">​</a></h2><h3 id="列出本地主机上的镜像" tabindex="-1">列出本地主机上的镜像 <a class="header-anchor" href="#列出本地主机上的镜像" aria-label="Permalink to &quot;列出本地主机上的镜像&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker images [options]</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/20220204100006.png" alt=""></p><blockquote><p><strong>各个选项说明</strong>:</p><p>REPOSITORY：表示镜像的仓库源 TAG：镜像的标签版本号 IMAGE ID：镜像ID CREATED：镜像创建时间 SIZE：镜像大小</p></blockquote><p>同一仓库源可以有多个 TAG版本，代表这个仓库源的不同个版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。</p><p>如果你不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像</p><blockquote><p><strong>OPTIONS说明</strong>：</p><p>-a :列出本地所有的镜像（含历史映像层） -q :只显示镜像ID。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker images -a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker images -q</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker images -aq</span></span></code></pre></div></blockquote><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204100219941.png" alt="image-20220204100219941"></p><h3 id="某个xxx镜像名字" tabindex="-1">某个XXX镜像名字 <a class="header-anchor" href="#某个xxx镜像名字" aria-label="Permalink to &quot;某个XXX镜像名字&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker search [OPTIONS] 镜像名字</span></span></code></pre></div><blockquote><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204100355734.png" alt="image-20220204100355734"></p><p>各项参数说明：</p><p>name:镜像名称 desription:镜像说明 stars:点赞数量 offical:是否官方的 automated:是否自动构建的</p></blockquote><blockquote><p>OPTIONS说明：</p><p>--limit : 只列出N个镜像，默认25个</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker search --limit 5 redis</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204100440204.png" alt="image-20220204100440204"></p></blockquote><h3 id="docker-pull-某个xxx镜像名字" tabindex="-1">docker pull 某个XXX镜像名字 <a class="header-anchor" href="#docker-pull-某个xxx镜像名字" aria-label="Permalink to &quot;docker pull 某个XXX镜像名字&quot;">​</a></h3><p>docker pull 镜像名字[:TAG]</p><p>docker pull 镜像名字</p><p>没有TAG就是最新版等价于docker pull 镜像名字:latest</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#  docker pull ubuntu</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204100617821.png" alt="image-20220204100617821"></p><h3 id="查看镜像-容器-数据卷所占的空间" tabindex="-1">查看镜像/容器/数据卷所占的空间 <a class="header-anchor" href="#查看镜像-容器-数据卷所占的空间" aria-label="Permalink to &quot;查看镜像/容器/数据卷所占的空间&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#	docker system df</span></span></code></pre></div><blockquote><p>images:镜像</p><p>containers:容器</p><p>local volumes：本地卷</p><p>build cache:构建缓存</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204100659436.png" alt="image-20220204100659436"></p><h3 id="docker-rmi-某个xxx镜像名字id" tabindex="-1">docker rmi 某个XXX镜像名字ID <a class="header-anchor" href="#docker-rmi-某个xxx镜像名字id" aria-label="Permalink to &quot;docker rmi 某个XXX镜像名字ID&quot;">​</a></h3><h4 id="删除单个" tabindex="-1">删除单个 <a class="header-anchor" href="#删除单个" aria-label="Permalink to &quot;删除单个&quot;">​</a></h4><p>docker rmi -f 镜像ID</p><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204100801318.png" alt="image-20220204100801318"></p><h4 id="删除多个" tabindex="-1">删除多个 <a class="header-anchor" href="#删除多个" aria-label="Permalink to &quot;删除多个&quot;">​</a></h4><p>docker rmi -f 镜像名1:TAG 镜像名2:TAG</p><h4 id="删除全部" tabindex="-1">删除全部 <a class="header-anchor" href="#删除全部" aria-label="Permalink to &quot;删除全部&quot;">​</a></h4><p>docker rmi -f $(docker images -qa)</p><blockquote><p><a style="color:red;">危险操作，没事别瞎执行</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/fhwlnetwork/blos_imgs/img/image-20220204120110566.png" alt="image-20220204120110566"></p>`,35);function f(e,q,x,y,A,C){const o=r,l=d("ClientOnly");return t(),n("div",null,[_,p(l,null,{default:h(()=>{var a,s;return[(((a=e.$frontmatter)==null?void 0:a.aside)??!0)&&(((s=e.$frontmatter)==null?void 0:s.showArticleMetadata)??!0)?(t(),g(o,{key:0,article:e.$frontmatter},null,8,["article"])):u("",!0)]}),_:1}),v])}const X=c(b,[["render",f]]);export{D as __pageData,X as default};
